//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_CINAME_COMMENT_CINEMA", "CINEMA", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.CINEMA), "CINAME_COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.CINAME_COMMENT), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_CINAME_COMMENT_USER", "RUSER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.RUSER), "CINAME_COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.CINAME_COMMENT), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_CINEMA_PICTURE_CINEMA", "CINEMA", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.CINEMA), "CINEMA_PICTURE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.CINEMA_PICTURE), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_MOVIE_SCHEDULE_CINEMA", "CINEMA", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.CINEMA), "MOVIE_SCHEDULE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.MOVIE_SCHEDULE), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_COLLECTION_COLLECTION", "RUSER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.RUSER), "COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.COLLECTION), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_COLLECTION_MOVIE", "MOVIE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.MOVIE), "COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.COLLECTION), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_CRITIC_COMMENT_FILM_CRITIC", "FILM_CRITIC", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.FILM_CRITIC), "CRITIC_COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.CRITIC_COMMENT), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_CRITIC_COMMENT_USER", "RUSER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.RUSER), "CRITIC_COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.CRITIC_COMMENT), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_FILM_CRITIC_FILM_CRITIC", "RUSER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.RUSER), "FILM_CRITIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.FILM_CRITIC), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_FILM_CRITIC_MOVIE", "MOVIE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.MOVIE), "FILM_CRITIC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.FILM_CRITIC), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_MOVIE_COMMENT_MOVIE", "MOVIE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.MOVIE), "MOVIE_COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.MOVIE_COMMENT), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_MOVIE_PICTURE_MOVIE", "MOVIE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.MOVIE), "MOVIE_PICTURE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.MOVIE_PICTURE), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_MOVIE_SCHEDULE_MOVIE", "MOVIE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.MOVIE), "MOVIE_SCHEDULE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.MOVIE_SCHEDULE), true)]
[assembly: EdmRelationshipAttribute("WATCHMOVIEModel", "FK_MOVIE_COMMENT_USER", "RUSER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.RUSER), "MOVIE_COMMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.MOVIE_COMMENT), true)]

#endregion

namespace DataAccessLayer
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WATCHMOVIEEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WATCHMOVIEEntities”部分中的连接字符串初始化新 WATCHMOVIEEntities 对象。
        /// </summary>
        public WATCHMOVIEEntities() : base("name=WATCHMOVIEEntities", "WATCHMOVIEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WATCHMOVIEEntities 对象。
        /// </summary>
        public WATCHMOVIEEntities(string connectionString) : base(connectionString, "WATCHMOVIEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WATCHMOVIEEntities 对象。
        /// </summary>
        public WATCHMOVIEEntities(EntityConnection connection) : base(connection, "WATCHMOVIEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CINAME_COMMENT> CINAME_COMMENT
        {
            get
            {
                if ((_CINAME_COMMENT == null))
                {
                    _CINAME_COMMENT = base.CreateObjectSet<CINAME_COMMENT>("CINAME_COMMENT");
                }
                return _CINAME_COMMENT;
            }
        }
        private ObjectSet<CINAME_COMMENT> _CINAME_COMMENT;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CINEMA> CINEMA
        {
            get
            {
                if ((_CINEMA == null))
                {
                    _CINEMA = base.CreateObjectSet<CINEMA>("CINEMA");
                }
                return _CINEMA;
            }
        }
        private ObjectSet<CINEMA> _CINEMA;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CINEMA_PICTURE> CINEMA_PICTURE
        {
            get
            {
                if ((_CINEMA_PICTURE == null))
                {
                    _CINEMA_PICTURE = base.CreateObjectSet<CINEMA_PICTURE>("CINEMA_PICTURE");
                }
                return _CINEMA_PICTURE;
            }
        }
        private ObjectSet<CINEMA_PICTURE> _CINEMA_PICTURE;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<COLLECTION> COLLECTION
        {
            get
            {
                if ((_COLLECTION == null))
                {
                    _COLLECTION = base.CreateObjectSet<COLLECTION>("COLLECTION");
                }
                return _COLLECTION;
            }
        }
        private ObjectSet<COLLECTION> _COLLECTION;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CRITIC_COMMENT> CRITIC_COMMENT
        {
            get
            {
                if ((_CRITIC_COMMENT == null))
                {
                    _CRITIC_COMMENT = base.CreateObjectSet<CRITIC_COMMENT>("CRITIC_COMMENT");
                }
                return _CRITIC_COMMENT;
            }
        }
        private ObjectSet<CRITIC_COMMENT> _CRITIC_COMMENT;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FILM_CRITIC> FILM_CRITIC
        {
            get
            {
                if ((_FILM_CRITIC == null))
                {
                    _FILM_CRITIC = base.CreateObjectSet<FILM_CRITIC>("FILM_CRITIC");
                }
                return _FILM_CRITIC;
            }
        }
        private ObjectSet<FILM_CRITIC> _FILM_CRITIC;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MOVIE> MOVIE
        {
            get
            {
                if ((_MOVIE == null))
                {
                    _MOVIE = base.CreateObjectSet<MOVIE>("MOVIE");
                }
                return _MOVIE;
            }
        }
        private ObjectSet<MOVIE> _MOVIE;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MOVIE_COMMENT> MOVIE_COMMENT
        {
            get
            {
                if ((_MOVIE_COMMENT == null))
                {
                    _MOVIE_COMMENT = base.CreateObjectSet<MOVIE_COMMENT>("MOVIE_COMMENT");
                }
                return _MOVIE_COMMENT;
            }
        }
        private ObjectSet<MOVIE_COMMENT> _MOVIE_COMMENT;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MOVIE_PICTURE> MOVIE_PICTURE
        {
            get
            {
                if ((_MOVIE_PICTURE == null))
                {
                    _MOVIE_PICTURE = base.CreateObjectSet<MOVIE_PICTURE>("MOVIE_PICTURE");
                }
                return _MOVIE_PICTURE;
            }
        }
        private ObjectSet<MOVIE_PICTURE> _MOVIE_PICTURE;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MOVIE_SCHEDULE> MOVIE_SCHEDULE
        {
            get
            {
                if ((_MOVIE_SCHEDULE == null))
                {
                    _MOVIE_SCHEDULE = base.CreateObjectSet<MOVIE_SCHEDULE>("MOVIE_SCHEDULE");
                }
                return _MOVIE_SCHEDULE;
            }
        }
        private ObjectSet<MOVIE_SCHEDULE> _MOVIE_SCHEDULE;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RUSER> RUSER
        {
            get
            {
                if ((_RUSER == null))
                {
                    _RUSER = base.CreateObjectSet<RUSER>("RUSER");
                }
                return _RUSER;
            }
        }
        private ObjectSet<RUSER> _RUSER;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 CINAME_COMMENT EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCINAME_COMMENT(CINAME_COMMENT cINAME_COMMENT)
        {
            base.AddObject("CINAME_COMMENT", cINAME_COMMENT);
        }
    
        /// <summary>
        /// 用于向 CINEMA EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCINEMA(CINEMA cINEMA)
        {
            base.AddObject("CINEMA", cINEMA);
        }
    
        /// <summary>
        /// 用于向 CINEMA_PICTURE EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCINEMA_PICTURE(CINEMA_PICTURE cINEMA_PICTURE)
        {
            base.AddObject("CINEMA_PICTURE", cINEMA_PICTURE);
        }
    
        /// <summary>
        /// 用于向 COLLECTION EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCOLLECTION(COLLECTION cOLLECTION)
        {
            base.AddObject("COLLECTION", cOLLECTION);
        }
    
        /// <summary>
        /// 用于向 CRITIC_COMMENT EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCRITIC_COMMENT(CRITIC_COMMENT cRITIC_COMMENT)
        {
            base.AddObject("CRITIC_COMMENT", cRITIC_COMMENT);
        }
    
        /// <summary>
        /// 用于向 FILM_CRITIC EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFILM_CRITIC(FILM_CRITIC fILM_CRITIC)
        {
            base.AddObject("FILM_CRITIC", fILM_CRITIC);
        }
    
        /// <summary>
        /// 用于向 MOVIE EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMOVIE(MOVIE mOVIE)
        {
            base.AddObject("MOVIE", mOVIE);
        }
    
        /// <summary>
        /// 用于向 MOVIE_COMMENT EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMOVIE_COMMENT(MOVIE_COMMENT mOVIE_COMMENT)
        {
            base.AddObject("MOVIE_COMMENT", mOVIE_COMMENT);
        }
    
        /// <summary>
        /// 用于向 MOVIE_PICTURE EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMOVIE_PICTURE(MOVIE_PICTURE mOVIE_PICTURE)
        {
            base.AddObject("MOVIE_PICTURE", mOVIE_PICTURE);
        }
    
        /// <summary>
        /// 用于向 MOVIE_SCHEDULE EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMOVIE_SCHEDULE(MOVIE_SCHEDULE mOVIE_SCHEDULE)
        {
            base.AddObject("MOVIE_SCHEDULE", mOVIE_SCHEDULE);
        }
    
        /// <summary>
        /// 用于向 RUSER EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRUSER(RUSER rUSER)
        {
            base.AddObject("RUSER", rUSER);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="CINAME_COMMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CINAME_COMMENT : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CINAME_COMMENT 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static CINAME_COMMENT CreateCINAME_COMMENT(global::System.Int32 id)
        {
            CINAME_COMMENT cINAME_COMMENT = new CINAME_COMMENT();
            cINAME_COMMENT.id = id;
            return cINAME_COMMENT;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cinema_id
        {
            get
            {
                return _cinema_id;
            }
            set
            {
                Oncinema_idChanging(value);
                ReportPropertyChanging("cinema_id");
                _cinema_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cinema_id");
                Oncinema_idChanged();
            }
        }
        private Nullable<global::System.Int32> _cinema_id;
        partial void Oncinema_idChanging(Nullable<global::System.Int32> value);
        partial void Oncinema_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> time
        {
            get
            {
                return _time;
            }
            set
            {
                OntimeChanging(value);
                ReportPropertyChanging("time");
                _time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time");
                OntimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _time;
        partial void OntimeChanging(Nullable<global::System.DateTime> value);
        partial void OntimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String body
        {
            get
            {
                return _body;
            }
            set
            {
                OnbodyChanging(value);
                ReportPropertyChanging("body");
                _body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("body");
                OnbodyChanged();
            }
        }
        private global::System.String _body;
        partial void OnbodyChanging(global::System.String value);
        partial void OnbodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> support
        {
            get
            {
                return _support;
            }
            set
            {
                OnsupportChanging(value);
                ReportPropertyChanging("support");
                _support = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("support");
                OnsupportChanged();
            }
        }
        private Nullable<global::System.Int16> _support;
        partial void OnsupportChanging(Nullable<global::System.Int16> value);
        partial void OnsupportChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> oppose
        {
            get
            {
                return _oppose;
            }
            set
            {
                OnopposeChanging(value);
                ReportPropertyChanging("oppose");
                _oppose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("oppose");
                OnopposeChanged();
            }
        }
        private Nullable<global::System.Int16> _oppose;
        partial void OnopposeChanging(Nullable<global::System.Int16> value);
        partial void OnopposeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CINAME_COMMENT_CINEMA", "CINEMA")]
        public CINEMA CINEMA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINAME_COMMENT_CINEMA", "CINEMA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINAME_COMMENT_CINEMA", "CINEMA").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CINEMA> CINEMAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINAME_COMMENT_CINEMA", "CINEMA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINAME_COMMENT_CINEMA", "CINEMA", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CINAME_COMMENT_USER", "RUSER")]
        public RUSER RUSER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_CINAME_COMMENT_USER", "RUSER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_CINAME_COMMENT_USER", "RUSER").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RUSER> RUSERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_CINAME_COMMENT_USER", "RUSER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RUSER>("WATCHMOVIEModel.FK_CINAME_COMMENT_USER", "RUSER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="CINEMA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CINEMA : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CINEMA 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static CINEMA CreateCINEMA(global::System.Int32 id)
        {
            CINEMA cINEMA = new CINEMA();
            cINEMA.id = id;
            return cINEMA;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String start_work_time
        {
            get
            {
                return _start_work_time;
            }
            set
            {
                Onstart_work_timeChanging(value);
                ReportPropertyChanging("start_work_time");
                _start_work_time = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("start_work_time");
                Onstart_work_timeChanged();
            }
        }
        private global::System.String _start_work_time;
        partial void Onstart_work_timeChanging(global::System.String value);
        partial void Onstart_work_timeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String end_work_time
        {
            get
            {
                return _end_work_time;
            }
            set
            {
                Onend_work_timeChanging(value);
                ReportPropertyChanging("end_work_time");
                _end_work_time = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("end_work_time");
                Onend_work_timeChanged();
            }
        }
        private global::System.String _end_work_time;
        partial void Onend_work_timeChanging(global::System.String value);
        partial void Onend_work_timeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String introduction
        {
            get
            {
                return _introduction;
            }
            set
            {
                OnintroductionChanging(value);
                ReportPropertyChanging("introduction");
                _introduction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("introduction");
                OnintroductionChanged();
            }
        }
        private global::System.String _introduction;
        partial void OnintroductionChanging(global::System.String value);
        partial void OnintroductionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String website
        {
            get
            {
                return _website;
            }
            set
            {
                OnwebsiteChanging(value);
                ReportPropertyChanging("website");
                _website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("website");
                OnwebsiteChanged();
            }
        }
        private global::System.String _website;
        partial void OnwebsiteChanging(global::System.String value);
        partial void OnwebsiteChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> rank
        {
            get
            {
                return _rank;
            }
            set
            {
                OnrankChanging(value);
                ReportPropertyChanging("rank");
                _rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rank");
                OnrankChanged();
            }
        }
        private Nullable<global::System.Byte> _rank;
        partial void OnrankChanging(Nullable<global::System.Byte> value);
        partial void OnrankChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> rank_number
        {
            get
            {
                return _rank_number;
            }
            set
            {
                Onrank_numberChanging(value);
                ReportPropertyChanging("rank_number");
                _rank_number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rank_number");
                Onrank_numberChanged();
            }
        }
        private Nullable<global::System.Int32> _rank_number;
        partial void Onrank_numberChanging(Nullable<global::System.Int32> value);
        partial void Onrank_numberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CINAME_COMMENT_CINEMA", "CINAME_COMMENT")]
        public EntityCollection<CINAME_COMMENT> CINAME_COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CINAME_COMMENT>("WATCHMOVIEModel.FK_CINAME_COMMENT_CINEMA", "CINAME_COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CINAME_COMMENT>("WATCHMOVIEModel.FK_CINAME_COMMENT_CINEMA", "CINAME_COMMENT", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CINEMA_PICTURE_CINEMA", "CINEMA_PICTURE")]
        public EntityCollection<CINEMA_PICTURE> CINEMA_PICTURE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CINEMA_PICTURE>("WATCHMOVIEModel.FK_CINEMA_PICTURE_CINEMA", "CINEMA_PICTURE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CINEMA_PICTURE>("WATCHMOVIEModel.FK_CINEMA_PICTURE_CINEMA", "CINEMA_PICTURE", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_SCHEDULE_CINEMA", "MOVIE_SCHEDULE")]
        public EntityCollection<MOVIE_SCHEDULE> MOVIE_SCHEDULE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVIE_SCHEDULE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_CINEMA", "MOVIE_SCHEDULE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVIE_SCHEDULE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_CINEMA", "MOVIE_SCHEDULE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="CINEMA_PICTURE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CINEMA_PICTURE : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CINEMA_PICTURE 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static CINEMA_PICTURE CreateCINEMA_PICTURE(global::System.Int32 id)
        {
            CINEMA_PICTURE cINEMA_PICTURE = new CINEMA_PICTURE();
            cINEMA_PICTURE.id = id;
            return cINEMA_PICTURE;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cinema_id
        {
            get
            {
                return _cinema_id;
            }
            set
            {
                Oncinema_idChanging(value);
                ReportPropertyChanging("cinema_id");
                _cinema_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cinema_id");
                Oncinema_idChanged();
            }
        }
        private Nullable<global::System.Int32> _cinema_id;
        partial void Oncinema_idChanging(Nullable<global::System.Int32> value);
        partial void Oncinema_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CINEMA_PICTURE_CINEMA", "CINEMA")]
        public CINEMA CINEMA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINEMA_PICTURE_CINEMA", "CINEMA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINEMA_PICTURE_CINEMA", "CINEMA").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CINEMA> CINEMAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINEMA_PICTURE_CINEMA", "CINEMA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CINEMA>("WATCHMOVIEModel.FK_CINEMA_PICTURE_CINEMA", "CINEMA", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="COLLECTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COLLECTION : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 COLLECTION 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static COLLECTION CreateCOLLECTION(global::System.Int32 id)
        {
            COLLECTION cOLLECTION = new COLLECTION();
            cOLLECTION.id = id;
            return cOLLECTION;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> movie_id
        {
            get
            {
                return _movie_id;
            }
            set
            {
                Onmovie_idChanging(value);
                ReportPropertyChanging("movie_id");
                _movie_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("movie_id");
                Onmovie_idChanged();
            }
        }
        private Nullable<global::System.Int32> _movie_id;
        partial void Onmovie_idChanging(Nullable<global::System.Int32> value);
        partial void Onmovie_idChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_COLLECTION_COLLECTION", "RUSER")]
        public RUSER RUSER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_COLLECTION_COLLECTION", "RUSER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_COLLECTION_COLLECTION", "RUSER").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RUSER> RUSERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_COLLECTION_COLLECTION", "RUSER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RUSER>("WATCHMOVIEModel.FK_COLLECTION_COLLECTION", "RUSER", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_COLLECTION_MOVIE", "MOVIE")]
        public MOVIE MOVIE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_COLLECTION_MOVIE", "MOVIE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_COLLECTION_MOVIE", "MOVIE").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MOVIE> MOVIEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_COLLECTION_MOVIE", "MOVIE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MOVIE>("WATCHMOVIEModel.FK_COLLECTION_MOVIE", "MOVIE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="CRITIC_COMMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CRITIC_COMMENT : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CRITIC_COMMENT 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static CRITIC_COMMENT CreateCRITIC_COMMENT(global::System.Int32 id)
        {
            CRITIC_COMMENT cRITIC_COMMENT = new CRITIC_COMMENT();
            cRITIC_COMMENT.id = id;
            return cRITIC_COMMENT;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> critic_id
        {
            get
            {
                return _critic_id;
            }
            set
            {
                Oncritic_idChanging(value);
                ReportPropertyChanging("critic_id");
                _critic_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("critic_id");
                Oncritic_idChanged();
            }
        }
        private Nullable<global::System.Int32> _critic_id;
        partial void Oncritic_idChanging(Nullable<global::System.Int32> value);
        partial void Oncritic_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> time
        {
            get
            {
                return _time;
            }
            set
            {
                OntimeChanging(value);
                ReportPropertyChanging("time");
                _time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time");
                OntimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _time;
        partial void OntimeChanging(Nullable<global::System.DateTime> value);
        partial void OntimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String body
        {
            get
            {
                return _body;
            }
            set
            {
                OnbodyChanging(value);
                ReportPropertyChanging("body");
                _body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("body");
                OnbodyChanged();
            }
        }
        private global::System.String _body;
        partial void OnbodyChanging(global::System.String value);
        partial void OnbodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> support
        {
            get
            {
                return _support;
            }
            set
            {
                OnsupportChanging(value);
                ReportPropertyChanging("support");
                _support = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("support");
                OnsupportChanged();
            }
        }
        private Nullable<global::System.Int16> _support;
        partial void OnsupportChanging(Nullable<global::System.Int16> value);
        partial void OnsupportChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> oppose
        {
            get
            {
                return _oppose;
            }
            set
            {
                OnopposeChanging(value);
                ReportPropertyChanging("oppose");
                _oppose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("oppose");
                OnopposeChanged();
            }
        }
        private Nullable<global::System.Int16> _oppose;
        partial void OnopposeChanging(Nullable<global::System.Int16> value);
        partial void OnopposeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CRITIC_COMMENT_FILM_CRITIC", "FILM_CRITIC")]
        public FILM_CRITIC FILM_CRITIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILM_CRITIC>("WATCHMOVIEModel.FK_CRITIC_COMMENT_FILM_CRITIC", "FILM_CRITIC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILM_CRITIC>("WATCHMOVIEModel.FK_CRITIC_COMMENT_FILM_CRITIC", "FILM_CRITIC").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FILM_CRITIC> FILM_CRITICReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILM_CRITIC>("WATCHMOVIEModel.FK_CRITIC_COMMENT_FILM_CRITIC", "FILM_CRITIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FILM_CRITIC>("WATCHMOVIEModel.FK_CRITIC_COMMENT_FILM_CRITIC", "FILM_CRITIC", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CRITIC_COMMENT_USER", "RUSER")]
        public RUSER RUSER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_CRITIC_COMMENT_USER", "RUSER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_CRITIC_COMMENT_USER", "RUSER").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RUSER> RUSERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_CRITIC_COMMENT_USER", "RUSER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RUSER>("WATCHMOVIEModel.FK_CRITIC_COMMENT_USER", "RUSER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="FILM_CRITIC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FILM_CRITIC : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FILM_CRITIC 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static FILM_CRITIC CreateFILM_CRITIC(global::System.Int32 id)
        {
            FILM_CRITIC fILM_CRITIC = new FILM_CRITIC();
            fILM_CRITIC.id = id;
            return fILM_CRITIC;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> movie_id
        {
            get
            {
                return _movie_id;
            }
            set
            {
                Onmovie_idChanging(value);
                ReportPropertyChanging("movie_id");
                _movie_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("movie_id");
                Onmovie_idChanged();
            }
        }
        private Nullable<global::System.Int32> _movie_id;
        partial void Onmovie_idChanging(Nullable<global::System.Int32> value);
        partial void Onmovie_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String body
        {
            get
            {
                return _body;
            }
            set
            {
                OnbodyChanging(value);
                ReportPropertyChanging("body");
                _body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("body");
                OnbodyChanged();
            }
        }
        private global::System.String _body;
        partial void OnbodyChanging(global::System.String value);
        partial void OnbodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> time
        {
            get
            {
                return _time;
            }
            set
            {
                OntimeChanging(value);
                ReportPropertyChanging("time");
                _time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time");
                OntimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _time;
        partial void OntimeChanging(Nullable<global::System.DateTime> value);
        partial void OntimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> support
        {
            get
            {
                return _support;
            }
            set
            {
                OnsupportChanging(value);
                ReportPropertyChanging("support");
                _support = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("support");
                OnsupportChanged();
            }
        }
        private Nullable<global::System.Int16> _support;
        partial void OnsupportChanging(Nullable<global::System.Int16> value);
        partial void OnsupportChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> oppose
        {
            get
            {
                return _oppose;
            }
            set
            {
                OnopposeChanging(value);
                ReportPropertyChanging("oppose");
                _oppose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("oppose");
                OnopposeChanged();
            }
        }
        private Nullable<global::System.Int16> _oppose;
        partial void OnopposeChanging(Nullable<global::System.Int16> value);
        partial void OnopposeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CRITIC_COMMENT_FILM_CRITIC", "CRITIC_COMMENT")]
        public EntityCollection<CRITIC_COMMENT> CRITIC_COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CRITIC_COMMENT>("WATCHMOVIEModel.FK_CRITIC_COMMENT_FILM_CRITIC", "CRITIC_COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CRITIC_COMMENT>("WATCHMOVIEModel.FK_CRITIC_COMMENT_FILM_CRITIC", "CRITIC_COMMENT", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_FILM_CRITIC_FILM_CRITIC", "RUSER")]
        public RUSER RUSER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_FILM_CRITIC_FILM_CRITIC", "RUSER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_FILM_CRITIC_FILM_CRITIC", "RUSER").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RUSER> RUSERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_FILM_CRITIC_FILM_CRITIC", "RUSER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RUSER>("WATCHMOVIEModel.FK_FILM_CRITIC_FILM_CRITIC", "RUSER", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_FILM_CRITIC_MOVIE", "MOVIE")]
        public MOVIE MOVIE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_FILM_CRITIC_MOVIE", "MOVIE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_FILM_CRITIC_MOVIE", "MOVIE").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MOVIE> MOVIEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_FILM_CRITIC_MOVIE", "MOVIE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MOVIE>("WATCHMOVIEModel.FK_FILM_CRITIC_MOVIE", "MOVIE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="MOVIE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MOVIE : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MOVIE 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static MOVIE CreateMOVIE(global::System.Int32 id)
        {
            MOVIE mOVIE = new MOVIE();
            mOVIE.id = id;
            return mOVIE;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String director
        {
            get
            {
                return _director;
            }
            set
            {
                OndirectorChanging(value);
                ReportPropertyChanging("director");
                _director = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("director");
                OndirectorChanged();
            }
        }
        private global::System.String _director;
        partial void OndirectorChanging(global::System.String value);
        partial void OndirectorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String actor
        {
            get
            {
                return _actor;
            }
            set
            {
                OnactorChanging(value);
                ReportPropertyChanging("actor");
                _actor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("actor");
                OnactorChanged();
            }
        }
        private global::System.String _actor;
        partial void OnactorChanging(global::System.String value);
        partial void OnactorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String kind
        {
            get
            {
                return _kind;
            }
            set
            {
                OnkindChanging(value);
                ReportPropertyChanging("kind");
                _kind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("kind");
                OnkindChanged();
            }
        }
        private global::System.String _kind;
        partial void OnkindChanging(global::System.String value);
        partial void OnkindChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String region
        {
            get
            {
                return _region;
            }
            set
            {
                OnregionChanging(value);
                ReportPropertyChanging("region");
                _region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("region");
                OnregionChanged();
            }
        }
        private global::System.String _region;
        partial void OnregionChanging(global::System.String value);
        partial void OnregionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> last_time
        {
            get
            {
                return _last_time;
            }
            set
            {
                Onlast_timeChanging(value);
                ReportPropertyChanging("last_time");
                _last_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("last_time");
                Onlast_timeChanged();
            }
        }
        private Nullable<global::System.Int16> _last_time;
        partial void Onlast_timeChanging(Nullable<global::System.Int16> value);
        partial void Onlast_timeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> first_showtime
        {
            get
            {
                return _first_showtime;
            }
            set
            {
                Onfirst_showtimeChanging(value);
                ReportPropertyChanging("first_showtime");
                _first_showtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("first_showtime");
                Onfirst_showtimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _first_showtime;
        partial void Onfirst_showtimeChanging(Nullable<global::System.DateTime> value);
        partial void Onfirst_showtimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String introduction
        {
            get
            {
                return _introduction;
            }
            set
            {
                OnintroductionChanging(value);
                ReportPropertyChanging("introduction");
                _introduction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("introduction");
                OnintroductionChanged();
            }
        }
        private global::System.String _introduction;
        partial void OnintroductionChanging(global::System.String value);
        partial void OnintroductionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> rank
        {
            get
            {
                return _rank;
            }
            set
            {
                OnrankChanging(value);
                ReportPropertyChanging("rank");
                _rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rank");
                OnrankChanged();
            }
        }
        private Nullable<global::System.Byte> _rank;
        partial void OnrankChanging(Nullable<global::System.Byte> value);
        partial void OnrankChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> rank_number
        {
            get
            {
                return _rank_number;
            }
            set
            {
                Onrank_numberChanging(value);
                ReportPropertyChanging("rank_number");
                _rank_number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rank_number");
                Onrank_numberChanged();
            }
        }
        private Nullable<global::System.Int16> _rank_number;
        partial void Onrank_numberChanging(Nullable<global::System.Int16> value);
        partial void Onrank_numberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> click_number
        {
            get
            {
                return _click_number;
            }
            set
            {
                Onclick_numberChanging(value);
                ReportPropertyChanging("click_number");
                _click_number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("click_number");
                Onclick_numberChanged();
            }
        }
        private Nullable<global::System.Int16> _click_number;
        partial void Onclick_numberChanging(Nullable<global::System.Int16> value);
        partial void Onclick_numberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_COLLECTION_MOVIE", "COLLECTION")]
        public EntityCollection<COLLECTION> COLLECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COLLECTION>("WATCHMOVIEModel.FK_COLLECTION_MOVIE", "COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COLLECTION>("WATCHMOVIEModel.FK_COLLECTION_MOVIE", "COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_FILM_CRITIC_MOVIE", "FILM_CRITIC")]
        public EntityCollection<FILM_CRITIC> FILM_CRITIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FILM_CRITIC>("WATCHMOVIEModel.FK_FILM_CRITIC_MOVIE", "FILM_CRITIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FILM_CRITIC>("WATCHMOVIEModel.FK_FILM_CRITIC_MOVIE", "FILM_CRITIC", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_COMMENT_MOVIE", "MOVIE_COMMENT")]
        public EntityCollection<MOVIE_COMMENT> MOVIE_COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVIE_COMMENT>("WATCHMOVIEModel.FK_MOVIE_COMMENT_MOVIE", "MOVIE_COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVIE_COMMENT>("WATCHMOVIEModel.FK_MOVIE_COMMENT_MOVIE", "MOVIE_COMMENT", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_PICTURE_MOVIE", "MOVIE_PICTURE")]
        public EntityCollection<MOVIE_PICTURE> MOVIE_PICTURE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVIE_PICTURE>("WATCHMOVIEModel.FK_MOVIE_PICTURE_MOVIE", "MOVIE_PICTURE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVIE_PICTURE>("WATCHMOVIEModel.FK_MOVIE_PICTURE_MOVIE", "MOVIE_PICTURE", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_SCHEDULE_MOVIE", "MOVIE_SCHEDULE")]
        public EntityCollection<MOVIE_SCHEDULE> MOVIE_SCHEDULE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVIE_SCHEDULE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_MOVIE", "MOVIE_SCHEDULE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVIE_SCHEDULE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_MOVIE", "MOVIE_SCHEDULE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="MOVIE_COMMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MOVIE_COMMENT : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MOVIE_COMMENT 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static MOVIE_COMMENT CreateMOVIE_COMMENT(global::System.Int32 id)
        {
            MOVIE_COMMENT mOVIE_COMMENT = new MOVIE_COMMENT();
            mOVIE_COMMENT.id = id;
            return mOVIE_COMMENT;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> movie_id
        {
            get
            {
                return _movie_id;
            }
            set
            {
                Onmovie_idChanging(value);
                ReportPropertyChanging("movie_id");
                _movie_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("movie_id");
                Onmovie_idChanged();
            }
        }
        private Nullable<global::System.Int32> _movie_id;
        partial void Onmovie_idChanging(Nullable<global::System.Int32> value);
        partial void Onmovie_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> time
        {
            get
            {
                return _time;
            }
            set
            {
                OntimeChanging(value);
                ReportPropertyChanging("time");
                _time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time");
                OntimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _time;
        partial void OntimeChanging(Nullable<global::System.DateTime> value);
        partial void OntimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String body
        {
            get
            {
                return _body;
            }
            set
            {
                OnbodyChanging(value);
                ReportPropertyChanging("body");
                _body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("body");
                OnbodyChanged();
            }
        }
        private global::System.String _body;
        partial void OnbodyChanging(global::System.String value);
        partial void OnbodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> support
        {
            get
            {
                return _support;
            }
            set
            {
                OnsupportChanging(value);
                ReportPropertyChanging("support");
                _support = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("support");
                OnsupportChanged();
            }
        }
        private Nullable<global::System.Int16> _support;
        partial void OnsupportChanging(Nullable<global::System.Int16> value);
        partial void OnsupportChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> oppose
        {
            get
            {
                return _oppose;
            }
            set
            {
                OnopposeChanging(value);
                ReportPropertyChanging("oppose");
                _oppose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("oppose");
                OnopposeChanged();
            }
        }
        private Nullable<global::System.Int16> _oppose;
        partial void OnopposeChanging(Nullable<global::System.Int16> value);
        partial void OnopposeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_COMMENT_MOVIE", "MOVIE")]
        public MOVIE MOVIE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_COMMENT_MOVIE", "MOVIE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_COMMENT_MOVIE", "MOVIE").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MOVIE> MOVIEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_COMMENT_MOVIE", "MOVIE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_COMMENT_MOVIE", "MOVIE", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_COMMENT_USER", "RUSER")]
        public RUSER RUSER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_MOVIE_COMMENT_USER", "RUSER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_MOVIE_COMMENT_USER", "RUSER").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RUSER> RUSERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RUSER>("WATCHMOVIEModel.FK_MOVIE_COMMENT_USER", "RUSER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RUSER>("WATCHMOVIEModel.FK_MOVIE_COMMENT_USER", "RUSER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="MOVIE_PICTURE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MOVIE_PICTURE : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MOVIE_PICTURE 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static MOVIE_PICTURE CreateMOVIE_PICTURE(global::System.Int32 id)
        {
            MOVIE_PICTURE mOVIE_PICTURE = new MOVIE_PICTURE();
            mOVIE_PICTURE.id = id;
            return mOVIE_PICTURE;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> movie_id
        {
            get
            {
                return _movie_id;
            }
            set
            {
                Onmovie_idChanging(value);
                ReportPropertyChanging("movie_id");
                _movie_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("movie_id");
                Onmovie_idChanged();
            }
        }
        private Nullable<global::System.Int32> _movie_id;
        partial void Onmovie_idChanging(Nullable<global::System.Int32> value);
        partial void Onmovie_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_PICTURE_MOVIE", "MOVIE")]
        public MOVIE MOVIE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_PICTURE_MOVIE", "MOVIE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_PICTURE_MOVIE", "MOVIE").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MOVIE> MOVIEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_PICTURE_MOVIE", "MOVIE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_PICTURE_MOVIE", "MOVIE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="MOVIE_SCHEDULE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MOVIE_SCHEDULE : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MOVIE_SCHEDULE 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static MOVIE_SCHEDULE CreateMOVIE_SCHEDULE(global::System.Int32 id)
        {
            MOVIE_SCHEDULE mOVIE_SCHEDULE = new MOVIE_SCHEDULE();
            mOVIE_SCHEDULE.id = id;
            return mOVIE_SCHEDULE;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> movie_id
        {
            get
            {
                return _movie_id;
            }
            set
            {
                Onmovie_idChanging(value);
                ReportPropertyChanging("movie_id");
                _movie_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("movie_id");
                Onmovie_idChanged();
            }
        }
        private Nullable<global::System.Int32> _movie_id;
        partial void Onmovie_idChanging(Nullable<global::System.Int32> value);
        partial void Onmovie_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cinema_id
        {
            get
            {
                return _cinema_id;
            }
            set
            {
                Oncinema_idChanging(value);
                ReportPropertyChanging("cinema_id");
                _cinema_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cinema_id");
                Oncinema_idChanged();
            }
        }
        private Nullable<global::System.Int32> _cinema_id;
        partial void Oncinema_idChanging(Nullable<global::System.Int32> value);
        partial void Oncinema_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> showtime
        {
            get
            {
                return _showtime;
            }
            set
            {
                OnshowtimeChanging(value);
                ReportPropertyChanging("showtime");
                _showtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showtime");
                OnshowtimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _showtime;
        partial void OnshowtimeChanging(Nullable<global::System.DateTime> value);
        partial void OnshowtimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private Nullable<global::System.Int32> _price;
        partial void OnpriceChanging(Nullable<global::System.Int32> value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String kind
        {
            get
            {
                return _kind;
            }
            set
            {
                OnkindChanging(value);
                ReportPropertyChanging("kind");
                _kind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("kind");
                OnkindChanged();
            }
        }
        private global::System.String _kind;
        partial void OnkindChanging(global::System.String value);
        partial void OnkindChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String book_website
        {
            get
            {
                return _book_website;
            }
            set
            {
                Onbook_websiteChanging(value);
                ReportPropertyChanging("book_website");
                _book_website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("book_website");
                Onbook_websiteChanged();
            }
        }
        private global::System.String _book_website;
        partial void Onbook_websiteChanging(global::System.String value);
        partial void Onbook_websiteChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_SCHEDULE_CINEMA", "CINEMA")]
        public CINEMA CINEMA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_CINEMA", "CINEMA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_CINEMA", "CINEMA").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CINEMA> CINEMAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CINEMA>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_CINEMA", "CINEMA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CINEMA>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_CINEMA", "CINEMA", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_SCHEDULE_MOVIE", "MOVIE")]
        public MOVIE MOVIE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_MOVIE", "MOVIE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_MOVIE", "MOVIE").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MOVIE> MOVIEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_MOVIE", "MOVIE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MOVIE>("WATCHMOVIEModel.FK_MOVIE_SCHEDULE_MOVIE", "MOVIE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WATCHMOVIEModel", Name="RUSER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RUSER : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RUSER 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="email">email 属性的初始值。</param>
        /// <param name="password">password 属性的初始值。</param>
        public static RUSER CreateRUSER(global::System.Int32 id, global::System.String email, global::System.String password)
        {
            RUSER rUSER = new RUSER();
            rUSER.id = id;
            rUSER.email = email;
            rUSER.password = password;
            return rUSER;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String like_kind
        {
            get
            {
                return _like_kind;
            }
            set
            {
                Onlike_kindChanging(value);
                ReportPropertyChanging("like_kind");
                _like_kind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("like_kind");
                Onlike_kindChanged();
            }
        }
        private global::System.String _like_kind;
        partial void Onlike_kindChanging(global::System.String value);
        partial void Onlike_kindChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CINAME_COMMENT_USER", "CINAME_COMMENT")]
        public EntityCollection<CINAME_COMMENT> CINAME_COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CINAME_COMMENT>("WATCHMOVIEModel.FK_CINAME_COMMENT_USER", "CINAME_COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CINAME_COMMENT>("WATCHMOVIEModel.FK_CINAME_COMMENT_USER", "CINAME_COMMENT", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_COLLECTION_COLLECTION", "COLLECTION")]
        public EntityCollection<COLLECTION> COLLECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COLLECTION>("WATCHMOVIEModel.FK_COLLECTION_COLLECTION", "COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COLLECTION>("WATCHMOVIEModel.FK_COLLECTION_COLLECTION", "COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_CRITIC_COMMENT_USER", "CRITIC_COMMENT")]
        public EntityCollection<CRITIC_COMMENT> CRITIC_COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CRITIC_COMMENT>("WATCHMOVIEModel.FK_CRITIC_COMMENT_USER", "CRITIC_COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CRITIC_COMMENT>("WATCHMOVIEModel.FK_CRITIC_COMMENT_USER", "CRITIC_COMMENT", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_FILM_CRITIC_FILM_CRITIC", "FILM_CRITIC")]
        public EntityCollection<FILM_CRITIC> FILM_CRITIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FILM_CRITIC>("WATCHMOVIEModel.FK_FILM_CRITIC_FILM_CRITIC", "FILM_CRITIC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FILM_CRITIC>("WATCHMOVIEModel.FK_FILM_CRITIC_FILM_CRITIC", "FILM_CRITIC", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WATCHMOVIEModel", "FK_MOVIE_COMMENT_USER", "MOVIE_COMMENT")]
        public EntityCollection<MOVIE_COMMENT> MOVIE_COMMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVIE_COMMENT>("WATCHMOVIEModel.FK_MOVIE_COMMENT_USER", "MOVIE_COMMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVIE_COMMENT>("WATCHMOVIEModel.FK_MOVIE_COMMENT_USER", "MOVIE_COMMENT", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
